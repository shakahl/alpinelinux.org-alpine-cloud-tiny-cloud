# NoCloud Instance Metadata
# vim: ts=4 et ft=sh:

# DEBUG
set -x 

NOCLOUD_FILES="meta-data user-data vendor-data network-config"

is_nocloud_loaded() { [ -f "$TINY_CLOUD_VAR/.nocloud_loaded" ]; }

_load_nocloud_cmdline() {
    local kopt kv k v data

    for kopt in $(cat /proc/cmdline); do
        echo "$kopt" | grep -qE '(^|=)ds=nocloud(-net)?(;|$)' || continue
        for kv in $(echo "$kopt" | cut -d\; -f2-); do
            k=$(echo "$kv" | cut -d= -f1)
            v=$(echo "$kv" | cut -d= -f2- | sed -Ee s'|^file://|/|')
            case "$k" in
                h|hostname)
                    echo -e "\nhostname: $v" >> "$TINY_CLOUD_VAR/meta-data"
                    ;;
                i|instance-id)
                    echo -e "\ninstance-id: $v" >> "$TINY_CLOUD_VAR/meta-data"
                    ;;
                s|seedfrom)
                    for data in $NOCLOUD_FILES; do
                        case "$v" in
                            /*)
                                cat "$v" >> "$TINY_CLOUD_VAR/$data" || continue
                                echo >> "$TINY_CLOUD_VAR/$data"
                                ;;
                            http://*|https://*)
                                wget -qO - "$v" >> "$TINY_CLOUD_VAR/$data" || continue
                                echo >> "$TINY_CLOUD_VAR/$data"
                                ;;
                            *) echo "WARNING: Ignoring unknown seedfrom value '$v'" >&2
                                ;;
                        esac
                    done
                    ;;
                *)  echo "WARNING: Ignoring unknown nocloud kernel cmdline key '$k'" >&2
                    ;;
            esac
        done
        return
    done
}

_load_nocloud_volume() {
    local mntdir=$(mktmemp /mnt/cidata-XXXXXX)
    local data

    mkdir -p "$mntdir"
    # TODO: are lables case insensitive?
    mount LABEL=cidata "$mntdir" || mount LABEL=CIDATA "$mntdir" || return 1
    for data in $NOCLOUD_FILES; do
        cp "$mntdir/$data" "$TINY_CLOUD_VAR/$data" 2>/dev/null
    done
    umount "$mntdir"
    rmdir "$mntdir"
}

load_nocloud() {
    is_nocloud_loaded && return

    # start with a clean slate
    rm -f $NOCLOUD_FILES

    if ! _load_nocloud_cmdline || _load_nocloud_volume; then
        echo "ERROR: Unable to load NoCloud data" >&2
        return 1
    fi
    # at the very minimum, we expect something in meta-data

    touch "$TINY_CLOUD_VAR/.nocloud_loaded"
}

_imds() {
    local file="$TINY_CLOUD_VAR"/$(echo "$1" | cut -d/ -f1)
    local key=$(echo "$1" | cut -d/ -f2-)

    is_nocloud_loaded || load_nocloud || return 1

    # does file exist?
    [ -f "$file" ] || return 1

    # use 'file/' to get top-level keys
    if [ "$1" = "$file" ]; then
        cat "$file"
    else
        yx -f "$file" "$key"
    fi
}