# Tiny Cloud - Early Phase Functions
# vim:set ft=sh ts=4 noet:

if [ -z "$TINY_CLOUD_LIBS" ]; then
	TINY_CLOUD_CONF=${TINY_CLOUD_CONF:-/etc/conf.d/tiny-cloud}
	[ -f "$TINY_CLOUD_CONF" ] && source "$TINY_CLOUD_CONF"
	TINY_CLOUD_LIBS=${TINY_CLOUD_LIBS:-/lib/tiny-cloud}
fi

source "$TINY_CLOUD_LIBS"/init-common

expand_root() {
	# explicitly use busybox, in case util-linux is also installed
	local mountpoint=$(busybox mountpoint -n / | cut -d' ' -f1)
	local volume=$(echo "$mountpoint" |
		sed -Ee "s/(nvme\d+n\d|(xv|s)d[a-z])p?\d?$/\1/"
	)
	local partition

	if [ "$mountpoint" != "$volume" ]; then
		# it's a partition, resize it
		partition=$(echo "$mountpoint" | sed -Ee "s/.*(\d+)$/\1/")
		echo ", +" | sfdisk -q --no-reread -N "$partition" "$volume"
		partx -u "$volume"
	fi
	# resize filesystem
	mount -orw,remount /
	resize2fs "$mountpoint"
}

assemble_interfaces() { "$TINY_CLOUD_LIBS"/network-interfaces; }

has_cloud_hotplugs() { [ -n "$HOTPLUG_MODULES" ]; }

install_hotplugs() {
	local result

	for module in $HOTPLUG_MODULES; do
		result='-'
		echo -n " $module"
		if type "mod__$module" | grep -q "is a function"; then
			"mod__$module" && result='+' || result='!'
		fi
		echo -n "($result)"
	done
}

HOTPLUG_TYPE=${HOTPLUG_TYPE:-mdev}
source "$TINY_CLOUD_LIBS/$HOTPLUG_TYPE"